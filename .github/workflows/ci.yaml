name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - "*"

permissions:
  contents: read

env:
  IMAGE_REGISTRY: "quay.io"
  IMAGE_NAMESPACE: "dynatrace"
  IMAGE_NAME: "dynatrace-bootstrapper"

jobs:
  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Run unit tests and integration tests
        id: unittest
        run: |
          make go/test
  linting:
    name: Run linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          # renovate depName=github.com/golangci/golangci-lint
          version: v1.63.4
          args: --timeout 300s --out-${NO_FUTURE}format colored-line-number
      - name: Run deadcode
        id: deadcode
        run: |
          make go/deadcode

  markdown-lint:
    name: Lint markdown files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Lint markdown files
        uses: articulate/actions-markdownlint@87f495d21507d6844dc917a01e742eaaa45049c0 # v1.1.0
        with:
          config: .markdownlint.json
          # renovate depName=github.com/igorshubovych/markdownlint-cli
          version: v0.43.0

  prepare:
    name: Prepare properties
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Prepare build parameters
        id: prep
        run: |
          hack/build/ci/prepare-build-variables.sh
    outputs:
      labels: |
        ${{ steps.prep.outputs.docker_image_labels }}
        vcs-ref=${{ github.sha }}
      version: ${{ steps.prep.outputs.docker_image_tag }}
      go_linker_args: ${{ steps.prep.outputs.go_linker_args }}

  build-push:
    name: Build and push images
    runs-on: ubuntu-latest
    needs: [prepare]
    if: ${{ !github.event.pull_request.head.repo.fork }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Golang
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Build target
        id: build-image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2.13
        with:
          oci: true
          containerfiles: |
           ./Dockerfile
          archs: amd64, arm64, ppc64le, s390x
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ needs.prepare.outputs.version }}
          labels: ${{ needs.prepare.outputs.labels }}
          build-args: |
            GO_LINKER_ARGS=${{ needs.prepare.outputs.go_linker_args }}
      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2.8
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

