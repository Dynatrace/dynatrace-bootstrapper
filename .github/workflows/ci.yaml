name: CI

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  pull_request:
    branches:
      - "*"

permissions:
  contents: read

env:
  IMAGE: "quay.io/dynatrace/dynatrace-bootstrapper"

jobs:
  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    if: github.ref_type != 'tag'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Run unit tests and integration tests
        id: unittest
        run: |
          make go/test
  linting:
    name: Run linting
    runs-on: ubuntu-latest
    if: github.ref_type != 'tag'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd # v7.0.0
        with:
          # renovate depName=github.com/golangci/golangci-lint
          version: v2.0.1
          args: --build-tags e2e --timeout 300s
      - name: Run deadcode
        id: deadcode
        run: |
          make go/deadcode

  markdown-lint:
    name: Lint markdown files
    runs-on: ubuntu-latest
    if: github.ref_type != 'tag'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Lint markdown files
        uses: articulate/actions-markdownlint@87f495d21507d6844dc917a01e742eaaa45049c0 # v1.1.0
        with:
          config: .markdownlint.json
          # renovate depName=github.com/igorshubovych/markdownlint-cli
          version: v0.44.0

  prepare:
    name: Prepare properties
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Prepare build parameters
        id: prep
        run: |
          hack/build/ci/prepare-build-variables.sh
    outputs:
      labels: |
        ${{ steps.prep.outputs.docker_image_labels }}
        vcs-ref=${{ github.sha }}
      version: ${{ steps.prep.outputs.docker_image_tag }}
      go_linker_args: ${{ steps.prep.outputs.go_linker_args }}

  build-push:
    name: Build and push images
    runs-on: ubuntu-latest
    needs: [prepare]
    if: ${{ !github.event.pull_request.head.repo.fork }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # 3.10.0

      - name: Build and push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # 6.15.0
        with:
          platforms: linux/amd64,linux/arm64, linux/ppc64le, linux/s390x
          push: true
          tags: ${{ env.IMAGE }}:${{ needs.prepare.outputs.version }}
          labels: ${{ needs.prepare.outputs.labels }}
          outputs: type=oci
          build-args: |
            GO_LINKER_ARGS=${{ needs.prepare.outputs.go_linker_args }}